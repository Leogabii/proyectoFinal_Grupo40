/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyFinalAtencionResto.Vistas;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyFinalAtencionResto.AccesoADatos.MesaData;
import proyFinalAtencionResto.AccesoADatos.MeseroData;
import proyFinalAtencionResto.AccesoADatos.PedidoData;
import proyFinalAtencionResto.AccesoADatos.PedidoProductoData;
import proyFinalAtencionResto.AccesoADatos.ProductoData;
import proyFinalAtencionResto.Entidades.Mesero;
import proyFinalAtencionResto.Entidades.Pedido;
import proyFinalAtencionResto.Entidades.Producto;

/**
 *
 * @author eduardo
 */
public class ModificarPedido extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modelo = new DefaultTableModel(){
    @Override
    public boolean isCellEditable(int fila, int columna){
        if (columna==0){
            return true;
        }else{
            return false;
        }
    }
};
    private ArrayList<Producto> productosPedidos = new ArrayList();
    private Mesero mesero = null;
    private Producto producto=null;
    private int nroMesa;
    private int nroMozo;
    private final double IVA = 0.21; 
    private double subtotal=0;
    private double total=0;
    private static PedidoData pedidoData =  new PedidoData();
    private static MeseroData meseroData = new MeseroData();
    private static MesaData mesaData = new MesaData();
    private static ProductoData productoData = new ProductoData();
    private static PedidoProductoData pedidoProdData = new PedidoProductoData();
    private int vlor;
    private double dato1;
    private int dato2;
    private int dato3;
    /**
     * Creates new form AltaPedido
     */
    public ModificarPedido() {
        initComponents();
         this.setSize(1150, 650);
         this.setLocation(5,5);
        armarCabecera();
//        jlHora.setText(horaActual());
        cargarComboBoxMesero();
        deshabilitaBotones();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanelDeArriba = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtPedido = new javax.swing.JTextField();
        jtMesero = new javax.swing.JTextField();
        jtMesa = new javax.swing.JTextField();
        jbPedido = new javax.swing.JButton();
        jbNvaConsulta = new javax.swing.JButton();
        jpanelDeAbajjo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtItems = new javax.swing.JTable();
        jlTotal = new javax.swing.JLabel();
        jlIVA = new javax.swing.JLabel();
        jlSubtotal = new javax.swing.JLabel();
        jbGrabar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 0));
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("MODIFICACION DE PEDIDOS");

        jpanelDeArriba.setBackground(new java.awt.Color(255, 0, 0));
        jpanelDeArriba.setAutoscrolls(true);

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel1.setText("Nro. de pedido");

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel3.setText("Nro. de mesa:");

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jLabel4.setText("Legajo de Mesero:");

        jtPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPedidoActionPerformed(evt);
            }
        });

        jtMesero.setEditable(false);
        jtMesero.setBackground(new java.awt.Color(0, 204, 204));

        jtMesa.setEditable(false);
        jtMesa.setBackground(new java.awt.Color(0, 204, 153));
        jtMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtMesaActionPerformed(evt);
            }
        });

        jbPedido.setText("Consulta");
        jbPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPedidoActionPerformed(evt);
            }
        });

        jbNvaConsulta.setText("Nueva consulta");
        jbNvaConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNvaConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanelDeArribaLayout = new javax.swing.GroupLayout(jpanelDeArriba);
        jpanelDeArriba.setLayout(jpanelDeArribaLayout);
        jpanelDeArribaLayout.setHorizontalGroup(
            jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelDeArribaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(74, 74, 74)
                .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jtPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelDeArribaLayout.createSequentialGroup()
                        .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jpanelDeArribaLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtMesero, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpanelDeArribaLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelDeArribaLayout.createSequentialGroup()
                        .addComponent(jbNvaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        jpanelDeArribaLayout.setVerticalGroup(
            jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelDeArribaLayout.createSequentialGroup()
                .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelDeArribaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbNvaConsulta))
                .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelDeArribaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpanelDeArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtMesero, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addContainerGap(8, Short.MAX_VALUE))
                    .addGroup(jpanelDeArribaLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jbPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jpanelDeAbajjo.setBackground(new java.awt.Color(0, 204, 51));
        jpanelDeAbajjo.setAutoscrolls(true);

        jtItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtItemsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jtItemsMouseEntered(evt);
            }
        });
        jtItems.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtItemsPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jtItems);

        jlTotal.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jlTotal.setText("Total:");
        jlTotal.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        jlIVA.setText("IVA: 21%");

        jlSubtotal.setText("Sub-Total:");

        jbGrabar.setText("Grabar");
        jbGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGrabarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jLabel5.setText("Recuerde solo puede modificar los datos cantidad");
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));

        javax.swing.GroupLayout jpanelDeAbajjoLayout = new javax.swing.GroupLayout(jpanelDeAbajjo);
        jpanelDeAbajjo.setLayout(jpanelDeAbajjoLayout);
        jpanelDeAbajjoLayout.setHorizontalGroup(
            jpanelDeAbajjoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelDeAbajjoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanelDeAbajjoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelDeAbajjoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jpanelDeAbajjoLayout.createSequentialGroup()
                        .addGap(22, 442, Short.MAX_VALUE)
                        .addComponent(jbGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelDeAbajjoLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpanelDeAbajjoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jlSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(jlIVA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlTotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpanelDeAbajjoLayout.setVerticalGroup(
            jpanelDeAbajjoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelDeAbajjoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jpanelDeAbajjoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpanelDeAbajjoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpanelDeArriba, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanelDeAbajjo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpanelDeArriba, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpanelDeAbajjo, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGrabarActionPerformed
        

            pedidoData.actualizoImporte(Integer.parseInt(jtPedido.getText()),dato1*1.21);
            pedidoProdData.actualizaCantidad(Integer.parseInt(jtPedido.getText()),(Integer) jtItems.getValueAt(dato2, 1) , dato3);

    }//GEN-LAST:event_jbGrabarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPedidoActionPerformed

    private void jtMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMesaActionPerformed

    private void jbPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPedidoActionPerformed
         try{
        borrarFilas();
            if(jtPedido.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "el campo del numero de pedido no puede estar vacio");
                return;
            }
            else{
            cargarTablaPedidoporNumero(Integer.parseInt(jtPedido.getText()));
                jbPedido.setEnabled(false);
                    }
        
        }catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(this, "Debe ingresar un numero de pedido, controle lo que ingreso");
        
        } catch (SQLException ex) {
            Logger.getLogger(ModificarPedido.class.getName()).log(Level.SEVERE, null, ex);
        }       
        
    }//GEN-LAST:event_jbPedidoActionPerformed

    private void jtItemsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtItemsPropertyChange
//             String nvoVlor;                                        
//       try{
//        int nuevafilaSeleccionada = jtItems.getSelectedRow();
//        if(nuevafilaSeleccionada!=-1){
//            System.out.println("linea 375");
//            Integer vlor= (Integer) jtItems.getValueAt(nuevafilaSeleccionada, 0);
//            System.out.println("linea 376");         
//           
//           nvoVlor = (String) jtItems.getValueAt(nuevafilaSeleccionada,0).toString();
//            System.out.println("linea 380");
//        if (nvoVlor.isEmpty()){
//            JOptionPane.showMessageDialog(this, "Debe ingresar un valor en el campo cantidad a modificar");
//            jtItems.setValueAt(vlor, nuevafilaSeleccionada, 0);
//            return;
//        }else if (Integer.parseInt(nvoVlor)<=0){
//            JOptionPane.showMessageDialog(this,"El campo a modificar no puede ser menor a cero");
//           jtItems.setValueAt(vlor, nuevafilaSeleccionada, 0);
//            return;
//        }else{
//             jtItems.setValueAt(nvoVlor, nuevafilaSeleccionada, 0);
//             jtItems.setValueAt(nvoVlor, nuevafilaSeleccionada, 0);
//             double suma = Integer.parseInt(nvoVlor) * (Double) jtItems.getValueAt(nuevafilaSeleccionada, 3);
//             jtItems.setValueAt(suma, nuevafilaSeleccionada, 4);
//            int fila=jtItems.getRowCount()-1;
//            double nuevoSubtotal=0;
//            for (int i=0; i<fila; i++) {
//            nuevoSubtotal+=(double) jtItems.getValueAt(i, 4);
//            jlSubtotal.setText("Subtotal $ : " + nuevoSubtotal);
//            jlIVA.setText("IVA 21% $ " + (nuevoSubtotal*21/100));
//            jlTotal.setText("Total $: " + nuevoSubtotal*1.21);
//        }
//             
//        }
//        }
//        
////        String notas;
//////            notas = (String) (jtMaterias.getValueAt(filaSeleccionada,2));
//////            if(jtI
////            notas=  (jtMaterias.getValueAt(nuevafilaSeleccionada, 2))+"";
////           // notaultima=(Double) jtMaterias.getValueAt(nuevafilaSeleccionada, 2);
////        notaultima= Double.parseDouble(notas);
//        
//            }catch(NumberFormatException nfe){
//                JOptionPane.showMessageDialog(this, "revise el formato que ingresa como cantidad, debe ser numerico no negativo");
//                jtItems.setEditingColumn(vlor);
//            }catch(ClassCastException nfc){
//                JOptionPane.showMessageDialog(this, "error de casteo llame al administrador");
//                jtItems.setEditingColumn(vlor);
//            }
//    
//        
//        
//        
//        
//        
//        
    }//GEN-LAST:event_jtItemsPropertyChange

    private void jtItemsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtItemsMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jtItemsMouseEntered

    private void jtItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtItemsMouseClicked
             String nvoVlor;                                        
       try{
        int nuevafilaSeleccionada = jtItems.getSelectedRow();
        if(nuevafilaSeleccionada!=-1){
            System.out.println("linea 375");
            nvoVlor = JOptionPane.showInputDialog("Ingrese la nueva cantidad a modificar");
            
            
            
            
//            Integer vlor= (Integer) jtItems.getValueAt(nuevafilaSeleccionada, 0);
//            System.out.println("linea 376");         
//           
//           nvoVlor = (String) jtItems.getValueAt(nuevafilaSeleccionada,0).toString();
//            System.out.println("linea 380");
        if (nvoVlor.isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe ingresar un valor en el campo cantidad a modificar");
//            jtItems.setValueAt(vlor, nuevafilaSeleccionada, 0);
            return;
        }else if (Integer.parseInt(nvoVlor)<=0){
            JOptionPane.showMessageDialog(this,"El campo a modificar no puede ser menor a cero");
//           jtItems.setValueAt(vlor, nuevafilaSeleccionada, 0);
            return;
        }else{
             jtItems.setValueAt(nvoVlor, nuevafilaSeleccionada, 0);
             double suma = Integer.parseInt(nvoVlor) * (Double) jtItems.getValueAt(nuevafilaSeleccionada, 3);
             jtItems.setValueAt(suma, nuevafilaSeleccionada, 4);
            
            double nuevoSubtotal=0;
            for (int i=0; i<jtItems.getRowCount(); i++) {
            nuevoSubtotal+=(double) jtItems.getValueAt(i, 4);
            jlSubtotal.setText("Subtotal $ : " + nuevoSubtotal);
            jlIVA.setText("IVA 21% $ " + (nuevoSubtotal*21/100));
            jlTotal.setText("Total $: " + nuevoSubtotal*1.21);
            
            this.dato2=nuevafilaSeleccionada;
            this.dato1=nuevoSubtotal;
            this.dato3=Integer.parseInt(nvoVlor);
            
            
        }
             
        }
        }
        
//        String notas;
////            notas = (String) (jtMaterias.getValueAt(filaSeleccionada,2));
////            if(jtI
//            notas=  (jtMaterias.getValueAt(nuevafilaSeleccionada, 2))+"";
//           // notaultima=(Double) jtMaterias.getValueAt(nuevafilaSeleccionada, 2);
//        notaultima= Double.parseDouble(notas);
        
            }catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(this, "revise el formato que ingresa como cantidad, debe ser numerico no negativo");
                jtItems.setEditingColumn(vlor);
            }catch(ClassCastException nfc){
                JOptionPane.showMessageDialog(this, "error de casteo llame al administrador");
                jtItems.setEditingColumn(vlor);
            }
    
        
        
        
        
        
           
    }//GEN-LAST:event_jtItemsMouseClicked

    private void jbNvaConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNvaConsultaActionPerformed
        jtPedido.setText("");
        jbPedido.setEnabled(true);
    }//GEN-LAST:event_jbNvaConsultaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbGrabar;
    private javax.swing.JButton jbNvaConsulta;
    private javax.swing.JButton jbPedido;
    private javax.swing.JButton jbSalir;
    private javax.swing.JLabel jlIVA;
    private javax.swing.JLabel jlSubtotal;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JPanel jpanelDeAbajjo;
    private javax.swing.JPanel jpanelDeArriba;
    private javax.swing.JTable jtItems;
    private javax.swing.JTextField jtMesa;
    private javax.swing.JTextField jtMesero;
    private javax.swing.JTextField jtPedido;
    // End of variables declaration//GEN-END:variables

private void cargarComboBoxMesero(){
  mesero=new Mesero();
  mesero.setIdMesero(1);
  mesero.setNombre("Donald");
  mesero.setApellido("Trump");
  mesero.setDni(17656789);
  mesero.setDomicilio("Lacarra 2345");
  mesero.setLocalidad("Avellaneda");
  mesero.setTelefono("011 4566 - 7889");
  mesero.setProvincia("Buenos Aires");
  Mesero mesero1=new Mesero();
  mesero1.setIdMesero(2);
  mesero1.setNombre("Marcelo");
  mesero1.setApellido("Tinelli");
  mesero1.setDni(17656789);
  mesero1.setDomicilio("Lacarra 2345");
  mesero1.setLocalidad("Avellaneda");
  mesero1.setTelefono("011 4566 - 7889");
  mesero1.setProvincia("Buenos Aires");
//  jcbLegajo.addItem(mesero.getIdMesero());
//  jcbLegajo.addItem(mesero1.getIdMesero());
// 
  
//    List<Alumno> alumnos = aluData.listarAlumnos();
//     for (Alumno alu : alumnos){
//        jcbAlumno.addItem(alu);
//     }
}


 private void armarCabecera(){
        
        CabeceraTablaPedidos[] tope = CabeceraTablaPedidos.values();
        for (int i=0;i<tope.length;i++){
            modelo.addColumn(tope[i]);
            
        }
        
        jtItems.setModel(modelo);
        
        
        
    }

    private void borrarFilas(){
        
        int fila=jtItems.getRowCount()-1;
        for (; fila>=0; fila--) {
            modelo.removeRow(fila);
        }
        
   
        
        
    }

 private String fechaDeHoy(){

        Date fecha = new Date();

        SimpleDateFormat formato =  new SimpleDateFormat("dd-MM-yyyy");
     
        
        return (formato.format(fecha).toString());
                
           
    }

 private void deshabilitaBotones(){
     
//     jlAtendido.setText("Atendido por:  ");
//     jbAnular.setEnabled(false);
//     jtCantidad.setText("");
//     jtCantidad.setEnabled(false);
//     jcbProducto.setEnabled(false);
//     jbAgregar.setEnabled(false);
//     jbAnularItem.setEnabled(false);
//     jbGrabar.setEnabled(false);
     
 }
 private void habilitaBotones(){
     
//     jlAtendido.setText("Atendido por:  " + mesero.getNombre() + ", " + mesero.getApellido());
//     jbAnular.setEnabled(true);
//     jtCantidad.setText("");
//     jtCantidad.setEnabled(true);
//     jcbProducto.setEnabled(true);
//     jbAgregar.setEnabled(true);
//     jbAnularItem.setEnabled(false);
//     jbGrabar.setEnabled(false);
//     jcbMesa.setEnabled(false);
//     jcbLegajo.setEnabled(false);
//     jbAceptar.setEnabled(false);
 }

 

//private int mesaElegida(){
//    Integer eligio = Integer.parseInt(jcbMesa.getSelectedItem().toString());
//    return eligio;
//}
//        
//private int legajoMeseroElegido(){
//    Integer eligio = (Integer) jcbLegajo.getSelectedItem();
//    return eligio;
//}


private boolean estadoDeLaMesa(int nroMesa){
    boolean estado=true;
    return estado;
    
}


private void  modificoEstadoActual(int nroMesa,boolean estado){
    
    
}

private boolean consultaMozodeLaMeza(int nroMesa, int nroMozo){
    if ((nroMesa==3)&(nroMozo==2)){
    return true;
}else{
    return false;  
        }
}


private void cargarComboBoxProducto(){
  producto=new Producto();
  producto.setIdProducto(1);
  producto.setNombreProducto("Hamburguesa");
  producto.setStock(100);
  producto.setPrecio(699.99);
  
  Producto producto1=new Producto();
  producto1.setIdProducto(2);
  producto1.setNombreProducto("Pizza");
  producto1.setStock(100);
  producto1.setPrecio(1699.99);
  
//  jcbProducto.addItem(producto);
//  jcbProducto.addItem(producto1);
// 
  
//    List<Alumno> alumnos = aluData.listarAlumnos();
//     for (Alumno alu : alumnos){
//        jcbAlumno.addItem(alu);
//     }
}


 private void registrarPedido(int NroPedido, int nroMesa, int nroMozo,String fechaDeHoy,double total,ArrayList<Producto> productosPedidos){
     //envia a DATA los datos actualizar las tablas
     /*
     carga tabla pedidoProducto
     carga tabla pedidos
     actualiza tabla mesa
     
     */

}


        
 
 private void resetear(){
     //borra todo para empezar otra vez a cargar pedido
     borrarFilas();
     deshabilitaBotones();
//     jcbProducto.setEnabled(false);
//     jtCantidad.setText("");
//     jbAgregar.setEnabled(false);
//     jbAceptar.setEnabled(true);
//     jcbMesa.setEnabled(true);
//     jcbLegajo.setEnabled(true);
     subtotal=0;
     total=0;
           jlSubtotal.setText("   Subtotal: $ ");
       jlIVA.setText("     IVA 21%  " );
       jlTotal.setText("TOTAL  A ABONAR $ ");
//       jcbLegajo.setSelectedIndex(0);
//       jcbMesa.setSelectedIndex(0);
 }
        
       private int proximoNroPedido(){
            // consulta a la bd el ultimo nro de pedido y me suma uno
           return 1 + 1;
        }

       
       private String horaActual(){
     LocalDateTime locaDate = LocalDateTime.now();
    int hours  = locaDate.getHour();    
    int minutes = locaDate.getMinute();
    int seconds = locaDate.getSecond();
    return (""+hours+" : "+minutes+" : "+seconds+"");
//      System.out.println("Hora actual : " + hours  + ":"+ minutes +":"+seconds); 
       }
       
       private void  cargarTablaPedidoporNumero(int pedidoAConsultar) throws SQLException{
        List<Producto> productos = new ArrayList();
        
        HashMap<Integer,Integer> mapaTemporal;
        mapaTemporal=pedidoProdData.listarProductosporNumero(pedidoAConsultar);
        Pedido pedido= new Pedido();
        pedido=pedidoData.dameUnpedidoPorSuNro(pedidoAConsultar);
        jtMesero.setText(pedido.getIdMesero()+"");
        jtMesa.setText(pedido.getIdMesa()+"");
        jlTotal.setText("Total $: " + pedido.getImporte());
        Double subtotalito = pedido.getImporte()/1.21;
        jlSubtotal.setText("Subtotal $: "+ subtotalito);
        jlIVA.setText("IVA 21% $: " + (subtotalito*21/100));
        
 for (Map.Entry<Integer,Integer> value: mapaTemporal.entrySet()){
             
         
        Producto producto;
        
        Object vector[]= new Object[5];
            vlor = value.getValue();
                vector[0]=vlor;
                vector[1]=value.getKey();
                
        producto=productoData.traemeDatoDeEsteProducto(value.getKey());        
                
        
                
                vector[2]=producto.getNombreProducto();
                vector[3]=producto.getPrecio();
                vector[4]=(vlor*producto.getPrecio());
                modelo.addRow(vector);
                
    }
       }
       
} // **************** en class **********************
